	local PC의 데이터를 다룰 경우,
	또는 외부자원(DB, Internet...)을 다룰때는
	반드시 예외처리가 필요...
	
	예외처리 구문1
	try{
		//외부자원 처리 내용
	}catch(예외처리클래스타입	매개변수){
		//외부자원 처리하다 오류가 발생했을 경우만 실행됨
	}  
	
	try{
	
	}catch(예외처리 클래스){
	
	}catch(예외처리 클래스){
	
	}
	
	try{
		//외부자원 처리 내용
	}catch(예외처리클래스타입	매개변수){
		//외부자원 처리하다 오류가 발생했을 경우만 실행됨
	}finally{
		try{} 성공, catch(){} 실행 후,
		// 주로 자원 해제 코드(즉, 자원해제 메서드 호출 : close)) )
	}  
	
	예외처리 구문2
	메서드 선언부에서 예외처리....
	public void test() throws 예외처리클래스{
	
	}
	
	public void test() throws 예외처리클래스1, 예외처리클래스2, 예외처리클래스1{
	
	}
	
	-----------------------------------------
	-메서드내에서 예외처리 : try{}catch(){}		    //일반적으로
	-메서드 선언부에서 예외처리 단점 : 			//라이브러리에서
		해당메서드를 호출하는 곳에서 다시 예외처리해야한다!!!!
	----------------------------------------
	예외처리클래스 조상 클래스 : Exception.class		
	입출력 관련 : IOException.class				//인풋아웃풋
	데이터베이스 관련 : SQLExcption.class		//쿼리
		.....
		
	============================
	[외부 파일 읽거나 쓰기]
	파일조상 클래스 : File.class
	파일을 읽는 클래스  : FileReader.class
		1. FileReader fr = new FileReader.class("파일의 경로 및 파일명.확장자");
		예)c:\filetest\~~~.txt
		    c:\filetest\/~~~.txt
			
		특징 : 한문자 단위로 읽는다! //문자는 char, int에 들어감
				더이상 읽을 문자가 없을 경우, null 값 반환
				
	한 라인단위 읽어 낼 경우 : BufferReader.class		
				2. BufferReader br = new BufferReader(FileReader객체);
				실제로 한줄단위로 읽어내는 메서드 : BufferReader.readLine()
				
				String temp =br.readLine(); 
				
				temp == null
				
				String temp = null;
				while(	(temp = br.readLine()) != null){
					System.out.println(temp);
				}
				
				//위에서 다 찍어서 사용된 자원br과 fr 해제
				//가장 나중에 사용한거 먼저 닫기
				br.close(); //위에서 다 찍어서 br 해제
				fr.close();
				
				
				
/*				while(비교조건){
					실행 내용...
				}
				
				int n=0;
				while(n<10){
					실행 내용..
					n++;.
				}
*/
				
		
	파일을 쓰는 클래스  : FileWriter.class
		FileWriter fw = new FileWriter("저장할 파일의 경로 및 파일명.확장자");
		fw.writer("파일에 저장할 문장열..\n두번쨰 문장");   //\n ==>enter 키(줄바꿈)
		fw.close();
		
		FileWriter는 경로가 반드시 존재해야한다.
		단, 파일은 없어도 자동 생성시켜준다.			//닫고 열기때문에 예외처리 필요
		
		---------------------------------------
		FileWriter=null;			//구문 밖에서 null값 작성
		try{
			FileWriter fw = new FileWriter("저장할 파일의 경로 및 파일명.확장자");
			fw.writer("파일에 저장할 문장열..\n두번쨰 문장"); 
			fw.close();
		}catch(Exception e){
			//경로 잘못될 경우 catch로 이동하여 e라는 매개변수에 넣어줌.
			
		}
		
		
		
		
		
		
	=================================
		