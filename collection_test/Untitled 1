 자바에서 제공하는 자료구조 : Collection
 => 자료구조 이론을 이용하여 만들어진 Class
 
 Collection (interface)
 
 ArrayList	HashSet	 HashMap  구현
 List				Set	Map	(interface)
  
  공통 메서드
  1. 데이터 저장 메서드 : add(), addAll()		
  2. 데이터 확인 메서드 : contains(), containsAll(), isEmpty(), equals(), size() //
   isEmpty() : 비어있으면 true
   3. 데이터 삭제 메서드 : clear(), remove(), removeAll()
  ---------------------------------------------------------------
  List : 각 데이터의 위치를 알 수 있는 index가 존재.
  		get()꺼낼때, set()값변경, remove()
  		
  		각 데이터에 대한 중복 허용.
  		순서대로 데이터를 저장할 때 주로 사용.
  		
  			  ArrayList/LinkedList			둘 다	implements List 를 구현받은 상태
  		데이터 이동 / 연결고리 끊어지는 구조
  		
  		LinkedList는 List로 구현받음.
  ---------------------------------------------------------------		
  Set : **중복값을 허용하지 않는다!**
  		index가 없다. 데이터만 존재
  		집합 개념, 
  		순서없어서 순차적으로 나열 시켜 가져와야함. Iterator
  		
  		HashSet implement Set
  ---------------------------------------------------------------
  Map : 키와 값이 한쌍을 구성
 		  동일한 키를 허용하지 않는다.
 		  키에 대한 타입. 값에 대한 타입
 		  순서가 없으나, 자바내부에서 키변을 알파벳순으로 출력해서 순서가 있는 것처럼 보임. 
 		  
 		  put() : 키와 값을 저장할 때	(동일한 키의 값일 경우 덮어쓰임.)
 		  get() : 키를 이용하여 값을 추출할 때
 		  
 		  HashMap implements Map
 ----------------------------------------------------------------
 Queue (interface)		  
 선입선출(First in First out : FIFO)
 => 먼저 저장된 값을 먼저 추출하는 구조.
 => 먼저 들어온 데이터를 순차적으로 처리할 때 용이.
 offer() : 데이터 저장할 때
 poll() : 가장 앞에 있는 데이터추출 및 제거
 peek() : 가장 앞에 있는 데이터 추출
 
 AbstractQueue
 -----------------------------------------------------------------
 스레드
 스레드와 Thread.class와 다름.
 Thread.class는 Runnable interface를 구현 받음.
 
 
 
